{"version":3,"sources":["course_progress.js"],"names":["define","$","Ajax","Notification","Templates","ModalFactory","ModalEvents","courseProgressTable","SELECTORS","ROOT","TABLE","DATA_TABLE","STUDENT_PROGRESS_ELEMENT","STUDENT_PROGRESS_TABLE","COURSE_NAME","MESSAGE_HIDDEN","MESSAGE_AREA","TOGGLE_DESCRIPTION","REVERT","CUSTOM_MESSAGE","MESSAGE_SEND","BLOCK_PROCESSING","ALWAYS_LOAD","COURSE_PROGRESSING","LOAD_COURSE_PROGRESS","PANEL","PANEL_HEADING","PANEL_ACTIONS","STUDENT_PROOGRESS_VISIBLE","DATA","coursesTable","alwaysloadwarning","PROMISES","GET_COURSES","search","length","start","order","loadProgress","call","methodname","args","loadprogress","GET_COURSE_PROGRESS","courseid","SEND_MESSAGE","studentid","messagetext","createPieProgress","target","element","find","asPieProgress","namespace","speed","classes","svg","number","content","sendMessageToUser","message","done","response","val","click","fail","ex","exception","hide","toggleAlwaysLoading","checked","M","util","set_user_preference","toggleClass","draw","initializeEvents","root","on","addClass","render","html","js","replaceNodeContents","DataTable","scrollY","scrollCollapse","paging","retrieve","lengthchange","autoWidth","scrollX","info","language","searchPlaceholder","responsive","removeClass","animate","scrollTop","offset","top","console","log","getCourseProgressData","this","data","destroy","empty","show","focus","parents","checkbox","is","create","type","types","SAVE_CANCEL","title","get_string","body","then","modal","modalRoot","getRoot","save","cancel","prop","init","document","ready","button","detach","panelHeading","closest","panelActions","prepend","taskProcessing","parent","updateContainers","pagingType","bPaginate","bServerSide","emptyTable","lengthMenu","paginate","first","previous","next","last","ajax","callback","settings","loadCourseProgress","value","recordsTotal","courses","forEach","course","dData","index","enrolledStudents","id","fullname","startdate","students","percentage","progress","push","columns","orderable","drawCallback","createDatatable"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/modal_save_cancel',\n    'block_remuiblck/dataTables.bootstrap4',\n    'theme_remui/jquery-asPieProgress',\n    'theme_remui/aspieprogress'\n], function(\n    $,\n    Ajax,\n    Notification,\n    Templates,\n    ModalFactory,\n    ModalEvents\n) {\n    var SELECTORS = {\n        ROOT: '',\n        TABLE: '#DataTables_Teacher',\n        DATA_TABLE: '#DataTables_Teacher_wrapper',\n        STUDENT_PROGRESS_ELEMENT: '.student_progress_ele',\n        STUDENT_PROGRESS_TABLE: '#wdmCourseProgressTable',\n        COURSE_NAME: '.wdm_course_name.has-student',\n        MESSAGE_HIDDEN: '#messageidhidden',\n        MESSAGE_AREA: '#messagearea',\n        TOGGLE_DESCRIPTION: '.toggle-desc',\n        REVERT: '#courserevertbtn',\n        CUSTOM_MESSAGE: '.custom-message',\n        MESSAGE_SEND: '.send-message',\n        BLOCK_PROCESSING: '.block-processing',\n        ALWAYS_LOAD: '#always-load-progress',\n        COURSE_PROGRESSING: '.course-progress-settings',\n        LOAD_COURSE_PROGRESS: '#load-progress',\n        PANEL: '.panel',\n        PANEL_HEADING: '.panel-heading',\n        PANEL_ACTIONS: 'panel-actions',\n        BLOCK_PROCESSING: '.block-processing',\n        STUDENT_PROOGRESS_VISIBLE: 'student-progress-visible'\n    };\n\n    // Data object to store local data\n    var DATA = {\n        coursesTable: false,\n        alwaysloadwarning: false\n    };\n\n    var PROMISES = {\n        /**\n         * Get courses using ajax\n         * @param  {String}  search Search query\n         * @param  {Number}  length Number of courses\n         * @param  {Number}  start  Start index of courses\n         * @param  {Array}   order  Sorting order\n         * @return {Promise}        Ajax promise\n         */\n        GET_COURSES: function(search, length, start, order, loadProgress) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_get_course_progress_list',\n                args: {\n                    search: search,\n                    length: length,\n                    start: start,\n                    order: order,\n                    loadprogress: loadProgress\n                }\n            }])[0];\n        },\n        /**\n         * Get course progress using course id and ajax\n         * @param  {Number}  courseid Course id\n         * @return {Promise}          Ajax promise\n         */\n        GET_COURSE_PROGRESS: function(courseid) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_get_course_progress',\n                args: {\n                    courseid: courseid\n                }\n            }])[0];\n        },\n        /**\n         * Send message to student using student id and ajax\n         * @param  {Number} studentid   Student id\n         * @param  {String} messagetext Message text\n         * @return {Promise}            Ajax promise\n         */\n        SEND_MESSAGE: function(studentid, messagetext) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_send_message',\n                args: {\n                    studentid: studentid,\n                    messagetext: messagetext\n                }\n            }])[0];\n        }\n    }\n\n    /**\n     * Generate teacher courses table data from ajax response\n     * @param  {Array}  courses Courses list with course details\n     * @return {Object}         Data object\n     */\n    function generate_courses_table_data(courses) {\n        var data = [];\n        courses.forEach(function(course) {\n            var dData = {};\n            dData.index = '<div class=\"w-50\" tabindex=\"0\">'+course.index+'</div>';\n            if (course.enrolledStudents > 0) {\n                dData.course = '<div class=\"wdm_course_name has-student\" data-courseid=\"'+course.id+'\"><a href=\"javascript:void(0)\">'+course.fullname+'</a></div>';\n            } else {\n                dData.course = '<div class=\"wdm_course_name\" data-courseid=\"'+course.id+'\" >'+course.fullname+'</div>';\n            }\n            dData.startdate = course.startdate;\n            dData.students = '<div class=\"w-100\"><span class=\"w-full pl-40\">'+course.enrolledStudents+'</span></div>';\n            if (course.percentage == -1) {\n                dData.progress = '';\n            } else {\n                dData.progress = '<td class=\"w-100 px-10\"><div class=\"pie-progress pie-progress-xs m-0 w-35\" data-plugin=\"pieProgress\" data-valuemax=\"50\" data-barcolor=\"#11c26d\" data-size=\"20\" data-barsize=\"3\" data-goal=\"35\" aria-valuenow=\"'+course.percentage+'\" role=\"progressbar\" style=\"max-width: 35px!important;\"><div class=\"pie-progress-content\" style=\"z-index:2;\"> </div> <span class=\" progress-percent\" style=\"margin-left: 50px;position: absolute;top: 8px;\">' + course.percentage + '%</span> </div></td>';\n            }\n            data.push(dData);\n        });\n        return data;\n    }\n\n    //*****************\n    // This is code is for table creation on dashboard\n    // this code also toggles between course progress and student progress table\n    // Function createDatatable() creates course progress table\n    function createDatatable(root) {\n        DATA.coursesTable = $(root).show().find(SELECTORS.TABLE).DataTable({\n            \"paging\":   true,\n            \"pagingType\": \"simple_numbers\",\n            \"autoWidth\": true,\n            \"scrollX\": true,\n            \"bPaginate\": true,\n            \"bServerSide\": true,\n            language: {\n                searchPlaceholder: M.util.get_string('search', 'moodle'),\n                emptyTable: M.util.get_string('nomatchingcourses', 'core_backup'),\n                lengthMenu: M.util.get_string('show', 'moodle') + \" _MENU_ \" + M.util.get_string('entries', 'moodle'),\n                paginate: {\n                    first:      M.util.get_string('first', 'moodle'),\n                    previous:   M.util.get_string('previous', 'moodle'),\n                    next:       M.util.get_string('next', 'moodle'),\n                    last:       M.util.get_string('last', 'moodle')\n                },\n            },\n            \"ajax\": function(data, callback, settings) {\n                $(root).find(SELECTORS.BLOCK_PROCESSING).addClass('show');\n                let loadCourseProgress = $(root + ' ' + SELECTORS.COURSE_PROGRESSING).is('.load-progress');\n                PROMISES.GET_COURSES(\n                    data.search.value,\n                    data.length,\n                    data.start,\n                    data.order[0],\n                    loadCourseProgress\n                ).done(function(response) {\n                    if (response.recordsTotal == 0) {\n                        response.data = [];\n                        callback(response);\n                        $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                        return;\n                    }\n                    response.data = generate_courses_table_data(response.courses);\n                    callback(response);\n                    $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                }).fail(Notification.exception);\n            },\n            columns: [\n                { data: \"index\" },\n                { data: \"course\" },\n                { data: \"startdate\" },\n                { data: \"students\", \"orderable\" : false },\n                { data: \"progress\", \"orderable\" : false }\n            ],\n            responsive: true,\n            drawCallback: function(settings) {\n                createPieProgress('');\n            }\n        });\n    }\n\n\n    /**\n     * Create pie progress where div with .pie-progress class is present\n     */\n    function createPieProgress(target) {\n        var element = $(SELECTORS.ROOT);\n        if (target != '') {\n            element = element.find(target);\n        }\n        element.find('.pie-progress').asPieProgress({\n            namespace: 'pie-progress',\n            speed: 30,\n            classes: {\n                svg: 'pie-progress-svg',\n                element: 'pie-progress',\n                number: 'pie-progress-number',\n                content: 'pie-progress-content'\n            }\n        });\n    }\n\n    var courseProgressTable;\n    /**\n     * Fetch students course progress data using ajax and display in table format\n     * @param  {int} courseid Course id\n     */\n    function getCourseProgressData(courseid){\n        $(SELECTORS.ROOT).find(SELECTORS.BLOCK_PROCESSING).addClass('show');\n        PROMISES.GET_COURSE_PROGRESS(courseid).done(function(response) {\n            Templates.render('block_remuiblck/course_progress_view', response)\n            .done(function(html, js) {\n                $(SELECTORS.ROOT).find(SELECTORS.DATA_TABLE).hide();\n                Templates.replaceNodeContents($(SELECTORS.ROOT).find(SELECTORS.STUDENT_PROGRESS_ELEMENT), html, js);\n                createPieProgress(SELECTORS.STUDENT_PROGRESS_ELEMENT);\n                courseProgressTable = $(SELECTORS.ROOT).find(SELECTORS.STUDENT_PROGRESS_TABLE).DataTable({\n                    \"scrollY\":        \"300px\",\n                    \"scrollCollapse\": true,\n                    \"paging\":false,\n                    \"retrieve\": true,\n                    \"lengthchange\":false,\n                    \"autoWidth\": true,\n                    \"scrollX\": true,\n                    \"search\": \"Fred\",\n                    \"info\":false,\n                    language: {\n                        searchPlaceholder: \"Search\"\n                    },\n                    responsive: true,\n                });\n\n                $(SELECTORS.ROOT).find('div.dataTables_filter input').addClass('form-control');\n                $(SELECTORS.ROOT).find('div.dataTables_length select').addClass('form-control');\n\n                $(SELECTORS.ROOT).addClass(SELECTORS.STUDENT_PROOGRESS_VISIBLE);\n                $(SELECTORS.ROOT).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n\n                $('html, body').animate({\n                    scrollTop: $(SELECTORS.ROOT).offset().top - 120\n                }, 300);\n            })\n            .fail(function(ex) {\n                console.log(ex);\n            });\n        }).fail(function(ex) {\n            $(SELECTORS.ROOT).find('div#analysis-chart-area').hide();\n        });\n\n    }\n\n    /**\n     * Send message to user\n     * @param  {int}    studentid Student id\n     * @param  {string} message   Text message\n     */\n    function sendMessageToUser(studentid, message) {\n        PROMISES.SEND_MESSAGE(studentid, message)\n        .done(function(response) {\n            clearModalFields();\n            $(SELECTORS.ROOT).find('.close-message').click();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            $(SELECTORS.ROOT).find('div#analysis-chart-area').hide();\n        });\n    }\n\n    /**\n     * Clear message modal field\n     */\n    function clearModalFields() {\n        $(SELECTORS.ROOT).find(SELECTORS.MESSAGE_HIDDEN).val('');\n        $(SELECTORS.ROOT).find(SELECTORS.MESSAGE_AREA).val('');\n    }\n\n    /**\n     * Toggle always load course progress preference\n     * @param {Boolean} checked If checked course progress will be loaded always\n     */\n    function toggleAlwaysLoading(checked) {\n        M.util.set_user_preference('always-load-progress', checked);\n        $(SELECTORS.ROOT).find(SELECTORS.COURSE_PROGRESSING).toggleClass('always-loading', checked);\n        $(SELECTORS.ROOT).find(SELECTORS.COURSE_PROGRESSING).toggleClass('load-progress', checked);\n        DATA.coursesTable.draw(false);\n    }\n\n    /**\n     * Initialze events for course progress block\n     * @param  {String} root Root container id.\n     */\n    function initializeEvents(root) {\n        // Destroy the table and send ajax request\n        $('body').on('click', root + ' ' + SELECTORS.COURSE_NAME,function(){\n            var courseid = $(this).data('courseid');\n            // teacherViewTable.destroy();\n            getCourseProgressData(courseid);\n        })\n\n        // Restore the previous table\n        .on('click', root + ' ' + SELECTORS.REVERT,function(){\n            courseProgressTable.destroy();\n            $(root).find(SELECTORS.STUDENT_PROGRESS_ELEMENT).empty();\n            $(root).find(SELECTORS.DATA_TABLE).show();\n            $(root).removeClass(SELECTORS.STUDENT_PROOGRESS_VISIBLE);\n            $('html, body').animate({\n                scrollTop: $(SELECTORS.ROOT).offset().top - 120\n            }, 300);\n        })\n\n        // This block opens modal and sends message to user\n        .on('click', root + ' ' + SELECTORS.CUSTOM_MESSAGE,function(){\n            var studentid = $(this).data('studentid');\n            $(SELECTORS.MESSAGE_HIDDEN).val(studentid);\n        })\n\n        // Send message\n        .on('click', root + ' ' + SELECTORS.MESSAGE_SEND,function(){\n            var studentid = $(root).find(SELECTORS.MESSAGE_HIDDEN).val();\n            var message   = $(root).find(SELECTORS.MESSAGE_AREA).val();\n            if(message != '') {\n                sendMessageToUser(studentid, message);\n            } else {\n                $(SELECTORS.MESSAGE_AREA).focus();\n            }\n        })\n\n        // Toggle description of student progress\n        .on('click', SELECTORS.STUDENT_PROGRESS_ELEMENT + ' ' + SELECTORS.TOGGLE_DESCRIPTION, function() {\n            $(this).toggleClass('fa-plus');\n            $(this).toggleClass('fa-minus');\n            $(this).parents(SELECTORS.STUDENT_PROGRESS_ELEMENT).find('.panel-body').toggleClass('show');\n        })\n\n        // Enable course progress always loading\n        .on('change', root + ' ' + SELECTORS.ALWAYS_LOAD, function() {\n            var checkbox = $(this);\n            var checked = $(this).is(':checked');\n            if (!DATA.alwaysloadwarning && checked) {\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: M.util.get_string('alwaysload', 'block_remuiblck'),\n                    body: M.util.get_string('alwaysloadwarning', 'block_remuiblck')\n                })\n                .then(function(modal) {\n                    var modalRoot = modal.getRoot();\n                    modalRoot.on(ModalEvents.save, function() {\n                        DATA.alwaysloadwarning = true;\n                        M.util.set_user_preference('always-load-warning', true);\n                        toggleAlwaysLoading(checked);\n                        modal.destroy();\n                    });\n                    modalRoot.on(ModalEvents.cancel, function() {\n                        checkbox.prop('checked', false);\n                    });\n                    modal.show();\n                });\n            } else {\n                toggleAlwaysLoading(checked);\n            }\n        })\n\n        // Load course progress on click\n        .on('click', root + ' ' + SELECTORS.LOAD_COURSE_PROGRESS, function() {\n            $(root).find(SELECTORS.COURSE_PROGRESSING).addClass('load-progress');\n            DATA.coursesTable.draw(false);\n        });\n\n        // Teacher courses listing table order pieprogress\n        $(root + ' ' + SELECTORS.TABLE).on('order.dt', function () {\n           createPieProgress('');\n        });\n\n        // Student progress listing table order pieprogress\n        $(root + ' ' + SELECTORS.STUDENT_PROGRESS_TABLE).on('order.dt', function () {\n           createPieProgress('');\n        });\n    }\n\n    /**\n     * Move settings to panel heading\n     * @param  {string} root Root container id\n     */\n    var updateContainers = function(root) {\n        // Move add button panel heading\n        let button = $(root).find(SELECTORS.COURSE_PROGRESSING).detach();\n        let panelHeading = $(root).closest(SELECTORS.PANEL).find(SELECTORS.PANEL_HEADING);\n        let panelActions = $(panelHeading).find('.' + SELECTORS.PANEL_ACTIONS);\n        if (panelActions.length == 0) {\n            panelActions = $('<div class=\"' + SELECTORS.PANEL_ACTIONS + '\"></div>');\n            panelHeading.prepend(panelActions);\n        }\n        panelActions.prepend(button);\n        button.removeClass('d-none');\n\n        let taskProcessing = $(root).find(SELECTORS.BLOCK_PROCESSING).detach();\n        let panel = $(panelHeading).parent(SELECTORS.PANEL);\n        panel.prepend(taskProcessing);\n    };\n\n    /**\n     * Load task on initialisation\n     * @param {DOM}     root          block DOM object\n     * @param {Boolean} alwayswarning If false then always load progress warning will be shown on enabling\n     */\n    var init = function(root, alwaysloadwarning = false) {\n        SELECTORS.ROOT = root;\n        DATA.alwaysloadwarning = alwaysloadwarning;\n        $(document).ready(function() {\n            updateContainers(root);\n            createPieProgress('');\n            createDatatable(root);\n            initializeEvents(root);\n        });\n    };\n    return {\n        init: init\n    };\n});\n"],"file":"course_progress.min.js"}