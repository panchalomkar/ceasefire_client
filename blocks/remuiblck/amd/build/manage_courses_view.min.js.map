{"version":3,"sources":["manage_courses_view.js"],"names":["define","$","ajax","Notification","Templates","toolbar","SELECTORS","PROMISES","type","perpage","currentpage","call","methodname","args","TEMPLATES","init","root","loadCourses","arguments","length","undefined","done","response","courses","enrollink","M","cfg","wwwroot","enroltitle","util","get_string","graderreportlink","graderreporttitle","activityreportlink","activityreporttitle","editcourselink","editcoursetitle","coursereporttitle","courseviewlink","find","data","totalcourses","totalpages","render","html","colors","attr","text","start","to","end","total","each","index","element","css","not","slick","dots","arrows","infinite","rtl","opacity","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","window","trigger","this","content","position","style","event","hideOnClick","on","e","el","href","location","fail","exception"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'theme_remui/slick',\n    'theme_remui/jquery-toolbar'\n], function(\n    $,\n    ajax,\n    Notification,\n    Templates,\n    toolbar\n) {\n    // Declair all required selectors\n    var SELECTORS = {\n        COURSES_LIST: '[data-region=\"manage-courses-list\"]',\n        COURSES_LIST_DECK: '#manage_courses .card-deck.dashboard-card-deck',\n        COURSE_MENU: '.coursemenubtn[data-region=\"managecourses\"]',\n        PAGES: '[data-region-pages]'\n    };\n\n    // Declair all required promises\n    var PROMISES = {\n        /**\n         * Get list of courses which user is enrolled as teacher\n         *\n         * @param {String} type        Type of view selected card|list|summary\n         * @param {Number} perpage     Number of courses per page\n         * @param {Number} currentpage Current page number\n         *\n         * @return {promise} Ajax promise call\n         */\n        GET_MANAGE_COURSES_LIST: function(type, perpage, currentpage) {\n            return ajax.call([{\n                methodname: 'block_remuiblck_get_manage_courses_list',\n                args: {\n                    type: type,\n                    perpage: perpage,\n                    currentpage: currentpage\n                }\n            }])[0];\n        }\n    };\n\n    // Declair all required templates\n    var TEMPLATES = {\n        MANAGE_COURSES_LIST: 'block_remuiblck/manage_courses_list_items'\n    };\n\n    /**\n     * Get extra data required for course list item\n     * @param  {array} courses courses array\n     * @return {array}         courses array with extra data\n     */\n    var extraData = function(courses) {\n        courses.enrollink = M.cfg.wwwroot + \"/user/index.php?id=\";\n        courses.enroltitle = M.util.get_string('enrolusers', 'core_enrol');\n\n        courses.graderreportlink = M.cfg.wwwroot + \"/grade/report/grader/index.php?id=\";\n        courses.graderreporttitle = M.util.get_string('graderreport', 'core_grades');\n\n        courses.activityreportlink = M.cfg.wwwroot + \"/report/outline/index.php?id=\";\n        courses.activityreporttitle = M.util.get_string('activityreport', 'moodle');\n\n        courses.editcourselink = M.cfg.wwwroot + \"/course/edit.php?id=\";\n        courses.editcoursetitle = M.util.get_string('editcourse', 'theme_remui');\n\n        courses.coursereporttitle = M.util.get_string('coursereport', 'moodle');\n\n        courses.courseviewlink = M.cfg.wwwroot + \"/course/view.php?id=\";\n        return courses;\n    }\n\n    /**\n     * Apply slick styling to courses list if user selects card view\n     * @param  {String} root Root element id\n     */\n    var applySlick = function(root) {\n        var colors = ['#f39f45', '#f95e5f', '#2fb0bf', '#2fb786', '#526069', '#46657d'];\n        $('#manage_courses .wdm-course-card-body').each(function(index, element) {\n            index >= colors.length ? index = index % colors.length : index = index;\n            $(element).css('background-color', colors[index]);\n        });\n        $('#manage_courses .dashboard-card-deck').css(\"overflow\", \"unset\");\n        $('#manage_courses .dashboard-card-deck').not('.slick-initialized').each(function(index, element) {\n            $(element).slick({\n                dots: false,\n                arrows: true,\n                infinite: false,\n                rtl: ($(\"html\").attr(\"dir\") == \"rtl\") ? true : false,\n                opacity: 0,\n                speed: 500,\n                slidesToShow: 4,\n                slidesToScroll: 4,\n                responsive: [{\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 3\n                    }\n                    }, {\n                    breakpoint: 800,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 2\n                    }\n                    }, {\n                    breakpoint: 480,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                    }\n                ]\n            });\n            $(window).trigger('resize');\n        });\n    };\n\n    /**\n     * Load courses in course list view\n     * @param {String} root        Root element id\n     * @param {String} type        Type of view selected card|list|summary\n     * @param {Number} perpage     Number of courses per page\n     * @param {Number} currentpage Current page number\n     */\n    var loadCourses = function(root) {\n\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'card';\n        var perpage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n        var currentpage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n\n        PROMISES.GET_MANAGE_COURSES_LIST(type, perpage, currentpage).done(function(response) {\n            if (response.courses.length != 0) {\n                response = extraData(response);\n                response[type] = true;\n                $(root).find(SELECTORS.COURSES_LIST).data('currentpage', currentpage);\n                $(root).find(SELECTORS.COURSES_LIST).data('totalcourses', response.totalcourses);\n                $(root).find(SELECTORS.COURSES_LIST).data('totalpages', response.totalpages);\n            }\n            Templates.render(TEMPLATES.MANAGE_COURSES_LIST, response).done(function(html) {\n                $(root).find(SELECTORS.COURSES_LIST).html(html).attr('data-type', type);\n                $(root).find(SELECTORS.PAGES).text(M.util.get_string('showingfromto', 'block_remuiblck', {\n                    start: response.start,\n                    to: response.end,\n                    total: response.totalcourses\n                }));\n                if (type == 'card') {\n                    applySlick(root);\n                }\n                $(root).find(SELECTORS.COURSES_LIST).find(SELECTORS.COURSE_MENU).each(function(){\n                    $(this).toolbar({\n                        content: $(this).data('toolbar'),\n                        position: 'bottom',\n                        style: 'primary',\n                        event: 'click',\n                        hideOnClick: true\n                    });\n                    // fix redirect issue\n                    $(this).on('toolbarItemClick', function (e, el) {\n                        if (el.href) window.location.href = el.href;\n                    });\n                });\n            }).fail(Notification.exception);\n        }).fail(Notification.exception);\n    };\n\n    /**\n     * Initialize events\n     * @param  {String} root Root element id\n     */\n    var initialiseEvents = function(root) {\n        // Nothing to do here for now\n    };\n\n    /**\n     * Initialise manage courses view\n     * @param  {String} root Root element id\n     */\n    var init = function(root) {\n        initialiseEvents(root);\n    };\n    return {\n        init: init,\n        loadCourses: loadCourses\n    };\n});\n"],"file":"manage_courses_view.min.js"}