{"version":3,"sources":["color-picker.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","factory","define","amd","exports","module","require","jQuery","$","undefined","defaultOpts","beforeShow","noop","move","change","show","hide","color","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","appendTo","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","className","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","disabled","offset","spectrums","IE","exec","window","navigator","userAgent","rgbaSupport","contains","str","substr","indexOf","style","document","createElement","cssText","backgroundColor","replaceInput","join","markup","gradientFix","i","paletteTemplate","p","opts","html","length","current","tiny","tinycolor","c","toHsl","l","equals","formattedString","toString","swatchStyle","toRgbString","toFilter","push","append","attr","spectrum","element","o","func","wait","debounce","timeout","callbackContext","extend","callbacks","bind","instanceOptions","resize","reflow","context","this","args","arguments","clearTimeout","setTimeout","apply","visible","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","slice","draggingClass","shiftMovementDirection","doc","ownerDocument","boundElement","body","container","addClass","pickerContainer","find","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","textInput","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","is","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","val","colorOnShow","currentPreferredFormat","isEmpty","applyOptions","text","Array","isArray","j","rgb","toggleClass","updateSelectionPaletteFromStorage","localStorage","oldPalette","split","each","addColorToSelectionPalette","e","inArray","shift","drawPalette","currentColor","get","map","unique","reverse","getUniqueSelectionPalette","drawInitial","initial","dragStart","trigger","dragStop","removeClass","setFromTextInput","value","isValid","_set","updateOriginalInput","toggle","event","Event","isDefaultPrevented","hideAll","on","onkeydown","clickout","updateUI","keyCode","button","revert","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","fromRatio","Math","round","format","updateHelperLocations","flatColor","css","toHexString","realColor","displayColor","realHex","realRgb","alpha","toRgb","realAlpha","gradient","gradientType","dragX","dragY","max","min","top","left","alphaX","slideY","fireCallback","hasChanged","picker","input","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","offsetLeft","offsetTop","width","height","outerWidth","outerHeight","documentElement","clientWidth","scrollLeft","clientHeight","scrollTop","abs","bottom","right","disable","after","parent","paletteElementClick","data","ignore","target","closest","stopPropagation","preventDefault","hasClass","draggable","shiftKey","parseFloat","oldDragX","oldDragY","furtherFromX","setValue","paletteEvent","initialize","spect","option","optionName","optionValue","enable","coord","set","destroy","remove","id","call","concat","onmove","onstart","onstop","dragging","maxHeight","maxWidth","hasTouch","duringDragEvents","prevent","returnValue","documentMode","stop","t0","originalEvent","touches","pageX","pageY","which","fn","extra","method","Error","removeData","load","loadOpts","defaults","_cachedResult","colorInput","type","localization","palettes","processNativeColorInputs","colorInputs","trimLeft","trimRight","tinyCounter","math","mathRound","mathMin","mathMax","mathRandom","random","r","g","b","ok","replace","toLowerCase","match","named","names","matchers","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","hex6","hex3","stringInputToObject","hasOwnProperty","bound01","String","convertToPercentage","floor","f","q","t","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","_ok","_tc_id","rgbToHsl","d","rgbToHsv","rgbToHex","allow3Char","hex","pad2","charAt","rgbaToHex","_desaturate","amount","clamp01","_saturate","_greyscale","desaturate","_lighten","_brighten","_darken","_spin","hue","_complement","_triad","_tetrad","_splitcomplement","_analogous","results","slices","part","ret","_monochromatic","modification","isDark","getBrightness","isLight","getOriginalInput","getAlpha","setAlpha","toHsvString","toHslString","toHex","toHex8","toHex8String","toPercentageRgb","toPercentageRgbString","toName","hexNames","secondColor","hex8String","secondHex8String","formatSet","hasAlpha","_applyModification","lighten","brighten","darken","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","color1","color2","mix","w1","rgb1","rgb2","w","w2","readability","c1","c2","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp"],"mappings":"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","sourcesContent":["// Spectrum Colorpicker v1.8.1\n// https://github.com/bgrins/spectrum\n// Author: Brian Grinstead\n// License: MIT\n\n(function (factory) {\n    \"use strict\";\n\n    if (typeof define === 'function' && define.amd) { // AMD\n        define(['jquery'], factory);\n    }\n    else if (typeof exports == \"object\" && typeof module == \"object\") { // CommonJS\n        module.exports = factory(require('jquery'));\n    }\n    else { // Browser\n        factory(jQuery);\n    }\n})(function($, undefined) {\n    \"use strict\";\n\n    var defaultOpts = {\n\n        // Callbacks\n        beforeShow: noop,\n        move: noop,\n        change: noop,\n        show: noop,\n        hide: noop,\n\n        // Options\n        color: false,\n        flat: false,\n        showInput: false,\n        allowEmpty: false,\n        showButtons: true,\n        clickoutFiresChange: true,\n        showInitial: false,\n        showPalette: false,\n        showPaletteOnly: false,\n        hideAfterPaletteSelect: false,\n        togglePaletteOnly: false,\n        showSelectionPalette: true,\n        localStorageKey: false,\n        appendTo: \"body\",\n        maxSelectionSize: 7,\n        cancelText: \"cancel\",\n        chooseText: \"choose\",\n        togglePaletteMoreText: \"more\",\n        togglePaletteLessText: \"less\",\n        clearText: \"Clear Color Selection\",\n        noColorSelectedText: \"No Color Selected\",\n        preferredFormat: false,\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\n        containerClassName: \"\",\n        replacerClassName: \"\",\n        showAlpha: false,\n        theme: \"sp-light\",\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\n        selectionPalette: [],\n        disabled: false,\n        offset: null\n    },\n    spectrums = [],\n    IE = !!/msie/i.exec( window.navigator.userAgent ),\n    rgbaSupport = (function() {\n        function contains( str, substr ) {\n            return !!~('' + str).indexOf(substr);\n        }\n\n        var elem = document.createElement('div');\n        var style = elem.style;\n        style.cssText = 'background-color:rgba(0,0,0,.5)';\n        return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');\n    })(),\n    replaceInput = [\n        \"<div class='sp-replacer'>\",\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\n            \"<div class='sp-dd'>&#9660;</div>\",\n        \"</div>\"\n    ].join(''),\n    markup = (function () {\n\n        // IE does not support gradients with multiple stops, so we need to simulate\n        //  that for the rainbow slider with 8 divs that each have a single gradient\n        var gradientFix = \"\";\n        if (IE) {\n            for (var i = 1; i <= 6; i++) {\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\n            }\n        }\n\n        return [\n            \"<div class='sp-container sp-hidden'>\",\n                \"<div class='sp-palette-container'>\",\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\n                    \"<div class='sp-palette-button-container sp-cf'>\",\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\n                    \"</div>\",\n                \"</div>\",\n                \"<div class='sp-picker-container'>\",\n                    \"<div class='sp-top sp-cf'>\",\n                        \"<div class='sp-fill'></div>\",\n                        \"<div class='sp-top-inner'>\",\n                            \"<div class='sp-color'>\",\n                                \"<div class='sp-sat'>\",\n                                    \"<div class='sp-val'>\",\n                                        \"<div class='sp-dragger'></div>\",\n                                    \"</div>\",\n                                \"</div>\",\n                            \"</div>\",\n                            \"<div class='sp-clear sp-clear-display'>\",\n                            \"</div>\",\n                            \"<div class='sp-hue'>\",\n                                \"<div class='sp-slider'></div>\",\n                                gradientFix,\n                            \"</div>\",\n                        \"</div>\",\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\n                    \"</div>\",\n                    \"<div class='sp-input-container sp-cf'>\",\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\n                    \"</div>\",\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\n                    \"<div class='sp-button-container sp-cf'>\",\n                        \"<a class='sp-cancel' href='#'></a>\",\n                        \"<button type='button' class='sp-choose'></button>\",\n                    \"</div>\",\n                \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    })();\n\n    function paletteTemplate (p, color, className, opts) {\n        var html = [];\n        for (var i = 0; i < p.length; i++) {\n            var current = p[i];\n            if(current) {\n                var tiny = tinycolor(current);\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\n                c += (tinycolor.equals(color, current)) ? \" sp-thumb-active\" : \"\";\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\n                var swatchStyle = rgbaSupport ? (\"background-color:\" + tiny.toRgbString()) : \"filter:\" + tiny.toFilter();\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\"></span></span>');\n            } else {\n                var cls = 'sp-clear-display';\n                html.push($('<div />')\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\n                        .attr('title', opts.noColorSelectedText)\n                    )\n                    .html()\n                );\n            }\n        }\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\n    }\n\n    function hideAll() {\n        for (var i = 0; i < spectrums.length; i++) {\n            if (spectrums[i]) {\n                spectrums[i].hide();\n            }\n        }\n    }\n\n    function instanceOptions(o, callbackContext) {\n        var opts = $.extend({}, defaultOpts, o);\n        opts.callbacks = {\n            'move': bind(opts.move, callbackContext),\n            'change': bind(opts.change, callbackContext),\n            'show': bind(opts.show, callbackContext),\n            'hide': bind(opts.hide, callbackContext),\n            'beforeShow': bind(opts.beforeShow, callbackContext)\n        };\n\n        return opts;\n    }\n\n    function spectrum(element, o) {\n\n        var opts = instanceOptions(o, element),\n            flat = opts.flat,\n            showSelectionPalette = opts.showSelectionPalette,\n            localStorageKey = opts.localStorageKey,\n            theme = opts.theme,\n            callbacks = opts.callbacks,\n            resize = throttle(reflow, 10),\n            visible = false,\n            isDragging = false,\n            dragWidth = 0,\n            dragHeight = 0,\n            dragHelperHeight = 0,\n            slideHeight = 0,\n            slideWidth = 0,\n            alphaWidth = 0,\n            alphaSlideHelperWidth = 0,\n            slideHelperHeight = 0,\n            currentHue = 0,\n            currentSaturation = 0,\n            currentValue = 0,\n            currentAlpha = 1,\n            palette = [],\n            paletteArray = [],\n            paletteLookup = {},\n            selectionPalette = opts.selectionPalette.slice(0),\n            maxSelectionSize = opts.maxSelectionSize,\n            draggingClass = \"sp-dragging\",\n            shiftMovementDirection = null;\n\n        var doc = element.ownerDocument,\n            body = doc.body,\n            boundElement = $(element),\n            disabled = false,\n            container = $(markup, doc).addClass(theme),\n            pickerContainer = container.find(\".sp-picker-container\"),\n            dragger = container.find(\".sp-color\"),\n            dragHelper = container.find(\".sp-dragger\"),\n            slider = container.find(\".sp-hue\"),\n            slideHelper = container.find(\".sp-slider\"),\n            alphaSliderInner = container.find(\".sp-alpha-inner\"),\n            alphaSlider = container.find(\".sp-alpha\"),\n            alphaSlideHelper = container.find(\".sp-alpha-handle\"),\n            textInput = container.find(\".sp-input\"),\n            paletteContainer = container.find(\".sp-palette\"),\n            initialColorContainer = container.find(\".sp-initial\"),\n            cancelButton = container.find(\".sp-cancel\"),\n            clearButton = container.find(\".sp-clear\"),\n            chooseButton = container.find(\".sp-choose\"),\n            toggleButton = container.find(\".sp-palette-toggle\"),\n            isInput = boundElement.is(\"input\"),\n            isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\n            shouldReplace = isInput && !flat,\n            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\n            offsetElement = (shouldReplace) ? replacer : boundElement,\n            previewElement = replacer.find(\".sp-preview-inner\"),\n            initialColor = opts.color || (isInput && boundElement.val()),\n            colorOnShow = false,\n            currentPreferredFormat = opts.preferredFormat,\n            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\n            isEmpty = !initialColor,\n            allowEmpty = opts.allowEmpty && !isInputTypeColor;\n\n        function applyOptions() {\n\n            if (opts.showPaletteOnly) {\n                opts.showPalette = true;\n            }\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n\n            if (opts.palette) {\n                palette = opts.palette.slice(0);\n                paletteArray = Array.isArray(palette[0]) ? palette : [palette];\n                paletteLookup = {};\n                for (var i = 0; i < paletteArray.length; i++) {\n                    for (var j = 0; j < paletteArray[i].length; j++) {\n                        var rgb = tinycolor(paletteArray[i][j]).toRgbString();\n                        paletteLookup[rgb] = true;\n                    }\n                }\n            }\n\n            container.toggleClass(\"sp-flat\", flat);\n            container.toggleClass(\"sp-input-disabled\", !opts.showInput);\n            container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\n            container.toggleClass(\"sp-clear-enabled\", allowEmpty);\n            container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\n            container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\n            container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\n            container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\n            container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\n            container.addClass(opts.className).addClass(opts.containerClassName);\n\n            reflow();\n        }\n\n        function initialize() {\n\n            if (IE) {\n                container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n            }\n\n            applyOptions();\n\n            if (shouldReplace) {\n                boundElement.after(replacer).hide();\n            }\n\n            if (!allowEmpty) {\n                clearButton.hide();\n            }\n\n            if (flat) {\n                boundElement.after(container).hide();\n            }\n            else {\n\n                var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\n                if (appendTo.length !== 1) {\n                    appendTo = $(\"body\");\n                }\n\n                appendTo.append(container);\n            }\n\n            updateSelectionPaletteFromStorage();\n\n            offsetElement.on(\"click.spectrum touchstart.spectrum\", function (e) {\n                if (!disabled) {\n                    toggle();\n                }\n\n                e.stopPropagation();\n\n                if (!$(e.target).is(\"input\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\n                disable();\n            }\n\n            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\n            container.on(\"click\", stopPropagation);\n\n            // Handle user typed input\n            textInput.on(\"change\", setFromTextInput);\n            textInput.on(\"paste\", function () {\n                setTimeout(setFromTextInput, 1);\n            });\n            textInput.on(\"keydown\", function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\n\n            cancelButton.text(opts.cancelText);\n            cancelButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                revert();\n                hide();\n            });\n\n            clearButton.attr(\"title\", opts.clearText);\n            clearButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                isEmpty = true;\n                move();\n\n                if(flat) {\n                    //for the flat style, this is a change event\n                    updateOriginalInput(true);\n                }\n            });\n\n            chooseButton.text(opts.chooseText);\n            chooseButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                if (IE && textInput.is(\":focus\")) {\n                    textInput.trigger('change');\n                }\n\n                if (isValid()) {\n                    updateOriginalInput(true);\n                    hide();\n                }\n            });\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n            toggleButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                opts.showPaletteOnly = !opts.showPaletteOnly;\n\n                // To make sure the Picker area is drawn on the right, next to the\n                // Palette area (and not below the palette), first move the Palette\n                // to the left to make space for the picker, plus 5px extra.\n                // The 'applyOptions' function puts the whole container back into place\n                // and takes care of the button-text and the sp-palette-only CSS class.\n                if (!opts.showPaletteOnly && !flat) {\n                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\n                }\n                applyOptions();\n            });\n\n            draggable(alphaSlider, function (dragX, dragY, e) {\n                currentAlpha = (dragX / alphaWidth);\n                isEmpty = false;\n                if (e.shiftKey) {\n                    currentAlpha = Math.round(currentAlpha * 10) / 10;\n                }\n\n                move();\n            }, dragStart, dragStop);\n\n            draggable(slider, function (dragX, dragY) {\n                currentHue = parseFloat(dragY / slideHeight);\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n                move();\n            }, dragStart, dragStop);\n\n            draggable(dragger, function (dragX, dragY, e) {\n\n                // shift+drag should snap the movement to either the x or y axis.\n                if (!e.shiftKey) {\n                    shiftMovementDirection = null;\n                }\n                else if (!shiftMovementDirection) {\n                    var oldDragX = currentSaturation * dragWidth;\n                    var oldDragY = dragHeight - (currentValue * dragHeight);\n                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\n\n                    shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\n                }\n\n                var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\n                var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\n\n                if (setSaturation) {\n                    currentSaturation = parseFloat(dragX / dragWidth);\n                }\n                if (setValue) {\n                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);\n                }\n\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n\n                move();\n\n            }, dragStart, dragStop);\n\n            if (!!initialColor) {\n                set(initialColor);\n\n                // In case color was black - update the preview UI and set the format\n                // since the set function will not run (default color is black).\n                updateUI();\n                currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format;\n\n                addColorToSelectionPalette(initialColor);\n            }\n            else {\n                updateUI();\n            }\n\n            if (flat) {\n                show();\n            }\n\n            function paletteElementClick(e) {\n                if (e.data && e.data.ignore) {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n                }\n                else {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n\n                    // If the picker is going to close immediately, a palette selection\n                    // is a change.  Otherwise, it's a move only.\n                    if (opts.hideAfterPaletteSelect) {\n                        updateOriginalInput(true);\n                        hide();\n                    } else {\n                        updateOriginalInput();\n                    }\n                }\n\n                return false;\n            }\n\n            var paletteEvent = IE ? \"mousedown.spectrum\" : \"click.spectrum touchstart.spectrum\";\n            paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\n            initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\n        }\n\n        function updateSelectionPaletteFromStorage() {\n\n            if (localStorageKey && window.localStorage) {\n\n                // Migrate old palettes over to new format.  May want to remove this eventually.\n                try {\n                    var oldPalette = window.localStorage[localStorageKey].split(\",#\");\n                    if (oldPalette.length > 1) {\n                        delete window.localStorage[localStorageKey];\n                        $.each(oldPalette, function(i, c) {\n                             addColorToSelectionPalette(c);\n                        });\n                    }\n                }\n                catch(e) { }\n\n                try {\n                    selectionPalette = window.localStorage[localStorageKey].split(\";\");\n                }\n                catch (e) { }\n            }\n        }\n\n        function addColorToSelectionPalette(color) {\n            if (showSelectionPalette) {\n                var rgb = tinycolor(color).toRgbString();\n                if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === -1) {\n                    selectionPalette.push(rgb);\n                    while(selectionPalette.length > maxSelectionSize) {\n                        selectionPalette.shift();\n                    }\n                }\n\n                if (localStorageKey && window.localStorage) {\n                    try {\n                        window.localStorage[localStorageKey] = selectionPalette.join(\";\");\n                    }\n                    catch(e) { }\n                }\n            }\n        }\n\n        function getUniqueSelectionPalette() {\n            var unique = [];\n            if (opts.showPalette) {\n                for (var i = 0; i < selectionPalette.length; i++) {\n                    var rgb = tinycolor(selectionPalette[i]).toRgbString();\n\n                    if (!paletteLookup[rgb]) {\n                        unique.push(selectionPalette[i]);\n                    }\n                }\n            }\n\n            return unique.reverse().slice(0, opts.maxSelectionSize);\n        }\n\n        function drawPalette() {\n\n            var currentColor = get();\n\n            var html = $.map(paletteArray, function (palette, i) {\n                return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\n            });\n\n            updateSelectionPaletteFromStorage();\n\n            if (selectionPalette) {\n                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\n            }\n\n            paletteContainer.html(html.join(\"\"));\n        }\n\n        function drawInitial() {\n            if (opts.showInitial) {\n                var initial = colorOnShow;\n                var current = get();\n                initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\n            }\n        }\n\n        function dragStart() {\n            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\n                reflow();\n            }\n            isDragging = true;\n            container.addClass(draggingClass);\n            shiftMovementDirection = null;\n            boundElement.trigger('dragstart.spectrum', [ get() ]);\n        }\n\n        function dragStop() {\n            isDragging = false;\n            container.removeClass(draggingClass);\n            boundElement.trigger('dragstop.spectrum', [ get() ]);\n        }\n\n        function setFromTextInput() {\n\n            var value = textInput.val();\n\n            if ((value === null || value === \"\") && allowEmpty) {\n                set(null);\n                move();\n                updateOriginalInput();\n            }\n            else {\n                var tiny = tinycolor(value);\n                if (tiny.isValid()) {\n                    set(tiny);\n                    move();\n                    updateOriginalInput();\n                }\n                else {\n                    textInput.addClass(\"sp-validation-error\");\n                }\n            }\n        }\n\n        function toggle() {\n            if (visible) {\n                hide();\n            }\n            else {\n                show();\n            }\n        }\n\n        function show() {\n            var event = $.Event('beforeShow.spectrum');\n\n            if (visible) {\n                reflow();\n                return;\n            }\n\n            boundElement.trigger(event, [ get() ]);\n\n            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\n                return;\n            }\n\n            hideAll();\n            visible = true;\n\n            $(doc).on(\"keydown.spectrum\", onkeydown);\n            $(doc).on(\"click.spectrum\", clickout);\n            $(window).on(\"resize.spectrum\", resize);\n            replacer.addClass(\"sp-active\");\n            container.removeClass(\"sp-hidden\");\n\n            reflow();\n            updateUI();\n\n            colorOnShow = get();\n\n            drawInitial();\n            callbacks.show(colorOnShow);\n            boundElement.trigger('show.spectrum', [ colorOnShow ]);\n        }\n\n        function onkeydown(e) {\n            // Close on ESC\n            if (e.keyCode === 27) {\n                hide();\n            }\n        }\n\n        function clickout(e) {\n            // Return on right click.\n            if (e.button == 2) { return; }\n\n            // If a drag event was happening during the mouseup, don't hide\n            // on click.\n            if (isDragging) { return; }\n\n            if (clickoutFiresChange) {\n                updateOriginalInput(true);\n            }\n            else {\n                revert();\n            }\n            hide();\n        }\n\n        function hide() {\n            // Return if hiding is unnecessary\n            if (!visible || flat) { return; }\n            visible = false;\n\n            $(doc).off(\"keydown.spectrum\", onkeydown);\n            $(doc).off(\"click.spectrum\", clickout);\n            $(window).off(\"resize.spectrum\", resize);\n\n            replacer.removeClass(\"sp-active\");\n            container.addClass(\"sp-hidden\");\n\n            callbacks.hide(get());\n            boundElement.trigger('hide.spectrum', [ get() ]);\n        }\n\n        function revert() {\n            set(colorOnShow, true);\n            updateOriginalInput(true);\n        }\n\n        function set(color, ignoreFormatChange) {\n            if (tinycolor.equals(color, get())) {\n                // Update UI just in case a validation error needs\n                // to be cleared.\n                updateUI();\n                return;\n            }\n\n            var newColor, newHsv;\n            if (!color && allowEmpty) {\n                isEmpty = true;\n            } else {\n                isEmpty = false;\n                newColor = tinycolor(color);\n                newHsv = newColor.toHsv();\n\n                currentHue = (newHsv.h % 360) / 360;\n                currentSaturation = newHsv.s;\n                currentValue = newHsv.v;\n                currentAlpha = newHsv.a;\n            }\n            updateUI();\n\n            if (newColor && newColor.isValid() && !ignoreFormatChange) {\n                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\n            }\n        }\n\n        function get(opts) {\n            opts = opts || { };\n\n            if (allowEmpty && isEmpty) {\n                return null;\n            }\n\n            return tinycolor.fromRatio({\n                h: currentHue,\n                s: currentSaturation,\n                v: currentValue,\n                a: Math.round(currentAlpha * 1000) / 1000\n            }, { format: opts.format || currentPreferredFormat });\n        }\n\n        function isValid() {\n            return !textInput.hasClass(\"sp-validation-error\");\n        }\n\n        function move() {\n            updateUI();\n\n            callbacks.move(get());\n            boundElement.trigger('move.spectrum', [ get() ]);\n        }\n\n        function updateUI() {\n\n            textInput.removeClass(\"sp-validation-error\");\n\n            updateHelperLocations();\n\n            // Update dragger background color (gradients take care of saturation and value).\n            var flatColor = tinycolor.fromRatio({ h: currentHue, s: 1, v: 1 });\n            dragger.css(\"background-color\", flatColor.toHexString());\n\n            // Get a format that alpha will be included in (hex and names ignore alpha)\n            var format = currentPreferredFormat;\n            if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\n                if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\n                    format = \"rgb\";\n                }\n            }\n\n            var realColor = get({ format: format }),\n                displayColor = '';\n\n             //reset background info for preview element\n            previewElement.removeClass(\"sp-clear-display\");\n            previewElement.css('background-color', 'transparent');\n\n            if (!realColor && allowEmpty) {\n                // Update the replaced elements background with icon indicating no color selection\n                previewElement.addClass(\"sp-clear-display\");\n            }\n            else {\n                var realHex = realColor.toHexString(),\n                    realRgb = realColor.toRgbString();\n\n                // Update the replaced elements background color (with actual selected color)\n                if (rgbaSupport || realColor.alpha === 1) {\n                    previewElement.css(\"background-color\", realRgb);\n                }\n                else {\n                    previewElement.css(\"background-color\", \"transparent\");\n                    previewElement.css(\"filter\", realColor.toFilter());\n                }\n\n                if (opts.showAlpha) {\n                    var rgb = realColor.toRgb();\n                    rgb.a = 0;\n                    var realAlpha = tinycolor(rgb).toRgbString();\n                    var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\n\n                    if (IE) {\n                        alphaSliderInner.css(\"filter\", tinycolor(realAlpha).toFilter({ gradientType: 1 }, realHex));\n                    }\n                    else {\n                        alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\n                        // Use current syntax gradient on unprefixed property.\n                        alphaSliderInner.css(\"background\",\n                            \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\n                    }\n                }\n\n                displayColor = realColor.toString(format);\n            }\n\n            // Update the text entry input as it changes happen\n            if (opts.showInput) {\n                textInput.val(displayColor);\n            }\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            drawInitial();\n        }\n\n        function updateHelperLocations() {\n            var s = currentSaturation;\n            var v = currentValue;\n\n            if(allowEmpty && isEmpty) {\n                //if selected color is empty, hide the helpers\n                alphaSlideHelper.hide();\n                slideHelper.hide();\n                dragHelper.hide();\n            }\n            else {\n                //make sure helpers are visible\n                alphaSlideHelper.show();\n                slideHelper.show();\n                dragHelper.show();\n\n                // Where to show the little circle in that displays your current selected color\n                var dragX = s * dragWidth;\n                var dragY = dragHeight - (v * dragHeight);\n                dragX = Math.max(\n                    -dragHelperHeight,\n                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\n                );\n                dragY = Math.max(\n                    -dragHelperHeight,\n                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\n                );\n                dragHelper.css({\n                    \"top\": dragY + \"px\",\n                    \"left\": dragX + \"px\"\n                });\n\n                var alphaX = currentAlpha * alphaWidth;\n                alphaSlideHelper.css({\n                    \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\n                });\n\n                // Where to show the bar that displays your current selected hue\n                var slideY = (currentHue) * slideHeight;\n                slideHelper.css({\n                    \"top\": (slideY - slideHelperHeight) + \"px\"\n                });\n            }\n        }\n\n        function updateOriginalInput(fireCallback) {\n            var color = get(),\n                displayColor = '',\n                hasChanged = !tinycolor.equals(color, colorOnShow);\n\n            if (color) {\n                displayColor = color.toString(currentPreferredFormat);\n                // Update the selection palette with the current color\n                addColorToSelectionPalette(color);\n            }\n\n            if (isInput) {\n                boundElement.val(displayColor);\n            }\n\n            if (fireCallback && hasChanged) {\n                callbacks.change(color);\n                boundElement.trigger('change', [ color ]);\n            }\n        }\n\n        function reflow() {\n            if (!visible) {\n                return; // Calculations would be useless and wouldn't be reliable anyways\n            }\n            dragWidth = dragger.width();\n            dragHeight = dragger.height();\n            dragHelperHeight = dragHelper.height();\n            slideWidth = slider.width();\n            slideHeight = slider.height();\n            slideHelperHeight = slideHelper.height();\n            alphaWidth = alphaSlider.width();\n            alphaSlideHelperWidth = alphaSlideHelper.width();\n\n            if (!flat) {\n                container.css(\"position\", \"absolute\");\n                if (opts.offset) {\n                    container.offset(opts.offset);\n                } else {\n                    container.offset(getOffset(container, offsetElement));\n                }\n            }\n\n            updateHelperLocations();\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            boundElement.trigger('reflow.spectrum');\n        }\n\n        function destroy() {\n            boundElement.show();\n            offsetElement.off(\"click.spectrum touchstart.spectrum\");\n            container.remove();\n            replacer.remove();\n            spectrums[spect.id] = null;\n        }\n\n        function option(optionName, optionValue) {\n            if (optionName === undefined) {\n                return $.extend({}, opts);\n            }\n            if (optionValue === undefined) {\n                return opts[optionName];\n            }\n\n            opts[optionName] = optionValue;\n\n            if (optionName === \"preferredFormat\") {\n                currentPreferredFormat = opts.preferredFormat;\n            }\n            applyOptions();\n        }\n\n        function enable() {\n            disabled = false;\n            boundElement.attr(\"disabled\", false);\n            offsetElement.removeClass(\"sp-disabled\");\n        }\n\n        function disable() {\n            hide();\n            disabled = true;\n            boundElement.attr(\"disabled\", true);\n            offsetElement.addClass(\"sp-disabled\");\n        }\n\n        function setOffset(coord) {\n            opts.offset = coord;\n            reflow();\n        }\n\n        initialize();\n\n        var spect = {\n            show: show,\n            hide: hide,\n            toggle: toggle,\n            reflow: reflow,\n            option: option,\n            enable: enable,\n            disable: disable,\n            offset: setOffset,\n            set: function (c) {\n                set(c);\n                updateOriginalInput();\n            },\n            get: get,\n            destroy: destroy,\n            container: container\n        };\n\n        spect.id = spectrums.push(spect) - 1;\n\n        return spect;\n    }\n\n    /**\n    * checkOffset - get the offset below/above and left/right element depending on screen position\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\n    */\n    function getOffset(picker, input) {\n        var extraY = 0;\n        var dpWidth = picker.outerWidth();\n        var dpHeight = picker.outerHeight();\n        var inputHeight = input.outerHeight();\n        var doc = picker[0].ownerDocument;\n        var docElem = doc.documentElement;\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\n        var offset = input.offset();\n        var offsetLeft = offset.left;\n        var offsetTop = offset.top;\n\n        offsetTop += inputHeight;\n\n        offsetLeft -=\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\n\n        offsetTop -=\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\n\n        return {\n            top: offsetTop,\n            bottom: offset.bottom,\n            left: offsetLeft,\n            right: offset.right,\n            width: offset.width,\n            height: offset.height\n        };\n    }\n\n    /**\n    * noop - do nothing\n    */\n    function noop() {\n\n    }\n\n    /**\n    * stopPropagation - makes the code only doing this a little easier to read in line\n    */\n    function stopPropagation(e) {\n        e.stopPropagation();\n    }\n\n    /**\n    * Create a function bound to a given object\n    * Thanks to underscore.js\n    */\n    function bind(func, obj) {\n        var slice = Array.prototype.slice;\n        var args = slice.call(arguments, 2);\n        return function () {\n            return func.apply(obj, args.concat(slice.call(arguments)));\n        };\n    }\n\n    /**\n    * Lightweight drag helper.  Handles containment within the element, so that\n    * when dragging, the x is within [0,element.width] and y is within [0,element.height]\n    */\n    function draggable(element, onmove, onstart, onstop) {\n        onmove = onmove || function () { };\n        onstart = onstart || function () { };\n        onstop = onstop || function () { };\n        var doc = document;\n        var dragging = false;\n        var offset = {};\n        var maxHeight = 0;\n        var maxWidth = 0;\n        var hasTouch = ('ontouchstart' in window);\n\n        var duringDragEvents = {};\n        duringDragEvents[\"selectstart\"] = prevent;\n        duringDragEvents[\"dragstart\"] = prevent;\n        duringDragEvents[\"touchmove mousemove\"] = move;\n        duringDragEvents[\"touchend mouseup\"] = stop;\n\n        function prevent(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            e.returnValue = false;\n        }\n\n        function move(e) {\n            if (dragging) {\n                // Mouseup happened outside of window\n                if (IE && doc.documentMode < 9 && !e.button) {\n                    return stop();\n                }\n\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\n                var pageX = t0 && t0.pageX || e.pageX;\n                var pageY = t0 && t0.pageY || e.pageY;\n\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\n\n                if (hasTouch) {\n                    // Stop scrolling in iOS\n                    prevent(e);\n                }\n\n                onmove.apply(element, [dragX, dragY, e]);\n            }\n        }\n\n        function start(e) {\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\n\n            if (!rightclick && !dragging) {\n                if (onstart.apply(element, arguments) !== false) {\n                    dragging = true;\n                    maxHeight = $(element).height();\n                    maxWidth = $(element).width();\n                    offset = $(element).offset();\n\n                    $(doc).on(duringDragEvents);\n                    $(doc.body).addClass(\"sp-dragging\");\n\n                    move(e);\n\n                    prevent(e);\n                }\n            }\n        }\n\n        function stop() {\n            if (dragging) {\n                $(doc).off(duringDragEvents);\n                $(doc.body).removeClass(\"sp-dragging\");\n\n                // Wait a tick before notifying observers to allow the click event\n                // to fire in Chrome.\n                setTimeout(function() {\n                    onstop.apply(element, arguments);\n                }, 0);\n            }\n            dragging = false;\n        }\n\n        $(element).on(\"touchstart mousedown\", start);\n    }\n\n    function throttle(func, wait, debounce) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            var throttler = function () {\n                timeout = null;\n                func.apply(context, args);\n            };\n            if (debounce) clearTimeout(timeout);\n            if (debounce || !timeout) timeout = setTimeout(throttler, wait);\n        };\n    }\n\n    function inputTypeColorSupport() {\n        return $.fn.spectrum.inputTypeColorSupport();\n    }\n\n    /**\n    * Define a jQuery plugin\n    */\n    var dataID = \"spectrum.id\";\n    $.fn.spectrum = function (opts, extra) {\n\n        if (typeof opts == \"string\") {\n\n            var returnValue = this;\n            var args = Array.prototype.slice.call( arguments, 1 );\n\n            this.each(function () {\n                var spect = spectrums[$(this).data(dataID)];\n                if (spect) {\n                    var method = spect[opts];\n                    if (!method) {\n                        throw new Error( \"Spectrum: no such method: '\" + opts + \"'\" );\n                    }\n\n                    if (opts == \"get\") {\n                        returnValue = spect.get();\n                    }\n                    else if (opts == \"container\") {\n                        returnValue = spect.container;\n                    }\n                    else if (opts == \"option\") {\n                        returnValue = spect.option.apply(spect, args);\n                    }\n                    else if (opts == \"destroy\") {\n                        spect.destroy();\n                        $(this).removeData(dataID);\n                    }\n                    else {\n                        method.apply(spect, args);\n                    }\n                }\n            });\n\n            return returnValue;\n        }\n\n        // Initializing a new instance of spectrum\n        return this.spectrum(\"destroy\").each(function () {\n            var options = $.extend({}, $(this).data(), opts);\n            var spect = spectrum(this, options);\n            $(this).data(dataID, spect.id);\n        });\n    };\n\n    $.fn.spectrum.load = true;\n    $.fn.spectrum.loadOpts = {};\n    $.fn.spectrum.draggable = draggable;\n    $.fn.spectrum.defaults = defaultOpts;\n    $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport() {\n        if (typeof inputTypeColorSupport._cachedResult === \"undefined\") {\n            var colorInput = $(\"<input type='color'/>\")[0]; // if color element is supported, value will default to not null\n            inputTypeColorSupport._cachedResult = colorInput.type === \"color\" && colorInput.value !== \"\";\n        }\n        return inputTypeColorSupport._cachedResult;\n    };\n\n    $.spectrum = { };\n    $.spectrum.localization = { };\n    $.spectrum.palettes = { };\n\n    $.fn.spectrum.processNativeColorInputs = function () {\n        var colorInputs = $(\"input[type=color]\");\n        if (colorInputs.length && !inputTypeColorSupport()) {\n            colorInputs.spectrum({\n                preferredFormat: \"hex6\"\n            });\n        }\n    };\n\n    // TinyColor v1.1.2\n    // https://github.com/bgrins/TinyColor\n    // Brian Grinstead, MIT License\n\n    (function() {\n\n    var trimLeft = /^[\\s,#]+/,\n        trimRight = /\\s+$/,\n        tinyCounter = 0,\n        math = Math,\n        mathRound = math.round,\n        mathMin = math.min,\n        mathMax = math.max,\n        mathRandom = math.random;\n\n    var tinycolor = function(color, opts) {\n\n        color = (color) ? color : '';\n        opts = opts || { };\n\n        // If input is already a tinycolor, return itself\n        if (color instanceof tinycolor) {\n           return color;\n        }\n        // If we are called as a function, call using new instead\n        if (!(this instanceof tinycolor)) {\n            return new tinycolor(color, opts);\n        }\n\n        var rgb = inputToRGB(color);\n        this._originalInput = color;\n        this._r = rgb.r;\n        this._g = rgb.g;\n        this._b = rgb.b;\n        this._a = rgb.a;\n        this._roundA = mathRound(1000 * this._a) / 1000;\n        this._format = opts.format || rgb.format;\n        this._gradientType = opts.gradientType;\n\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this._r < 1) { this._r = mathRound(this._r); }\n        if (this._g < 1) { this._g = mathRound(this._g); }\n        if (this._b < 1) { this._b = mathRound(this._b); }\n\n        this._ok = rgb.ok;\n        this._tc_id = tinyCounter++;\n    };\n\n    tinycolor.prototype = {\n        isDark: function() {\n            return this.getBrightness() < 128;\n        },\n        isLight: function() {\n            return !this.isDark();\n        },\n        isValid: function() {\n            return this._ok;\n        },\n        getOriginalInput: function() {\n          return this._originalInput;\n        },\n        getFormat: function() {\n            return this._format;\n        },\n        getAlpha: function() {\n            return this._a;\n        },\n        getBrightness: function() {\n            var rgb = this.toRgb();\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n        },\n        setAlpha: function(value) {\n            this._a = boundAlpha(value);\n            this._roundA = mathRound(1000 * this._a) / 1000;\n            return this;\n        },\n        toHsv: function() {\n            var hsv = rgbToHsv(this._r, this._g, this._b);\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n        },\n        toHsvString: function() {\n            var hsv = rgbToHsv(this._r, this._g, this._b);\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n            return (this._a == 1) ?\n              \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n              \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n        },\n        toHsl: function() {\n            var hsl = rgbToHsl(this._r, this._g, this._b);\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n        },\n        toHslString: function() {\n            var hsl = rgbToHsl(this._r, this._g, this._b);\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n            return (this._a == 1) ?\n              \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n              \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n        },\n        toHex: function(allow3Char) {\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\n        },\n        toHexString: function(allow3Char) {\n            return '#' + this.toHex(allow3Char);\n        },\n        toHex8: function() {\n            return rgbaToHex(this._r, this._g, this._b, this._a);\n        },\n        toHex8String: function() {\n            return '#' + this.toHex8();\n        },\n        toRgb: function() {\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n        },\n        toRgbString: function() {\n            return (this._a == 1) ?\n              \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n              \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n        },\n        toPercentageRgb: function() {\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n        },\n        toPercentageRgbString: function() {\n            return (this._a == 1) ?\n              \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n              \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n        },\n        toName: function() {\n            if (this._a === 0) {\n                return \"transparent\";\n            }\n\n            if (this._a < 1) {\n                return false;\n            }\n\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n        },\n        toFilter: function(secondColor) {\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\n            var secondHex8String = hex8String;\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n            if (secondColor) {\n                var s = tinycolor(secondColor);\n                secondHex8String = s.toHex8String();\n            }\n\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n        },\n        toString: function(format) {\n            var formatSet = !!format;\n            format = format || this._format;\n\n            var formattedString = false;\n            var hasAlpha = this._a < 1 && this._a >= 0;\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\n\n            if (needsAlphaFormat) {\n                // Special case for \"transparent\", all other non-alpha formats\n                // will return rgba when there is transparency.\n                if (format === \"name\" && this._a === 0) {\n                    return this.toName();\n                }\n                return this.toRgbString();\n            }\n            if (format === \"rgb\") {\n                formattedString = this.toRgbString();\n            }\n            if (format === \"prgb\") {\n                formattedString = this.toPercentageRgbString();\n            }\n            if (format === \"hex\" || format === \"hex6\") {\n                formattedString = this.toHexString();\n            }\n            if (format === \"hex3\") {\n                formattedString = this.toHexString(true);\n            }\n            if (format === \"hex8\") {\n                formattedString = this.toHex8String();\n            }\n            if (format === \"name\") {\n                formattedString = this.toName();\n            }\n            if (format === \"hsl\") {\n                formattedString = this.toHslString();\n            }\n            if (format === \"hsv\") {\n                formattedString = this.toHsvString();\n            }\n\n            return formattedString || this.toHexString();\n        },\n\n        _applyModification: function(fn, args) {\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\n            this._r = color._r;\n            this._g = color._g;\n            this._b = color._b;\n            this.setAlpha(color._a);\n            return this;\n        },\n        lighten: function() {\n            return this._applyModification(lighten, arguments);\n        },\n        brighten: function() {\n            return this._applyModification(brighten, arguments);\n        },\n        darken: function() {\n            return this._applyModification(darken, arguments);\n        },\n        desaturate: function() {\n            return this._applyModification(desaturate, arguments);\n        },\n        saturate: function() {\n            return this._applyModification(saturate, arguments);\n        },\n        greyscale: function() {\n            return this._applyModification(greyscale, arguments);\n        },\n        spin: function() {\n            return this._applyModification(spin, arguments);\n        },\n\n        _applyCombination: function(fn, args) {\n            return fn.apply(null, [this].concat([].slice.call(args)));\n        },\n        analogous: function() {\n            return this._applyCombination(analogous, arguments);\n        },\n        complement: function() {\n            return this._applyCombination(complement, arguments);\n        },\n        monochromatic: function() {\n            return this._applyCombination(monochromatic, arguments);\n        },\n        splitcomplement: function() {\n            return this._applyCombination(splitcomplement, arguments);\n        },\n        triad: function() {\n            return this._applyCombination(triad, arguments);\n        },\n        tetrad: function() {\n            return this._applyCombination(tetrad, arguments);\n        }\n    };\n\n    // If input is an object, force 1 into \"1.0\" to handle ratios properly\n    // String input requires \"1.0\" as input, so 1 will be treated as 1\n    tinycolor.fromRatio = function(color, opts) {\n        if (typeof color == \"object\") {\n            var newColor = {};\n            for (var i in color) {\n                if (color.hasOwnProperty(i)) {\n                    if (i === \"a\") {\n                        newColor[i] = color[i];\n                    }\n                    else {\n                        newColor[i] = convertToPercentage(color[i]);\n                    }\n                }\n            }\n            color = newColor;\n        }\n\n        return tinycolor(color, opts);\n    };\n\n    // Given a string or object, convert that input to RGB\n    // Possible string inputs:\n    //\n    //     \"red\"\n    //     \"#f00\" or \"f00\"\n    //     \"#ff0000\" or \"ff0000\"\n    //     \"#ff000000\" or \"ff000000\"\n    //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n    //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n    //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n    //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n    //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n    //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n    //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n    //\n    function inputToRGB(color) {\n\n        var rgb = { r: 0, g: 0, b: 0 };\n        var a = 1;\n        var ok = false;\n        var format = false;\n\n        if (typeof color == \"string\") {\n            color = stringInputToObject(color);\n        }\n\n        if (typeof color == \"object\") {\n            if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\n                rgb = rgbToRgb(color.r, color.g, color.b);\n                ok = true;\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n            }\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\n                color.s = convertToPercentage(color.s);\n                color.v = convertToPercentage(color.v);\n                rgb = hsvToRgb(color.h, color.s, color.v);\n                ok = true;\n                format = \"hsv\";\n            }\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\n                color.s = convertToPercentage(color.s);\n                color.l = convertToPercentage(color.l);\n                rgb = hslToRgb(color.h, color.s, color.l);\n                ok = true;\n                format = \"hsl\";\n            }\n\n            if (color.hasOwnProperty(\"a\")) {\n                a = color.a;\n            }\n        }\n\n        a = boundAlpha(a);\n\n        return {\n            ok: ok,\n            format: color.format || format,\n            r: mathMin(255, mathMax(rgb.r, 0)),\n            g: mathMin(255, mathMax(rgb.g, 0)),\n            b: mathMin(255, mathMax(rgb.b, 0)),\n            a: a\n        };\n    }\n\n\n    // Conversion Functions\n    // --------------------\n\n    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n    // `rgbToRgb`\n    // Handle bounds / percentage checking to conform to CSS color spec\n    // <http://www.w3.org/TR/css3-color/>\n    // *Assumes:* r, g, b in [0, 255] or [0, 1]\n    // *Returns:* { r, g, b } in [0, 255]\n    function rgbToRgb(r, g, b){\n        return {\n            r: bound01(r, 255) * 255,\n            g: bound01(g, 255) * 255,\n            b: bound01(b, 255) * 255\n        };\n    }\n\n    // `rgbToHsl`\n    // Converts an RGB color value to HSL.\n    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n    // *Returns:* { h, s, l } in [0,1]\n    function rgbToHsl(r, g, b) {\n\n        r = bound01(r, 255);\n        g = bound01(g, 255);\n        b = bound01(b, 255);\n\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\n        var h, s, l = (max + min) / 2;\n\n        if(max == min) {\n            h = s = 0; // achromatic\n        }\n        else {\n            var d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch(max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n\n            h /= 6;\n        }\n\n        return { h: h, s: s, l: l };\n    }\n\n    // `hslToRgb`\n    // Converts an HSL color value to RGB.\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n    // *Returns:* { r, g, b } in the set [0, 255]\n    function hslToRgb(h, s, l) {\n        var r, g, b;\n\n        h = bound01(h, 360);\n        s = bound01(s, 100);\n        l = bound01(l, 100);\n\n        function hue2rgb(p, q, t) {\n            if(t < 0) t += 1;\n            if(t > 1) t -= 1;\n            if(t < 1/6) return p + (q - p) * 6 * t;\n            if(t < 1/2) return q;\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n            return p;\n        }\n\n        if(s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return { r: r * 255, g: g * 255, b: b * 255 };\n    }\n\n    // `rgbToHsv`\n    // Converts an RGB color value to HSV\n    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n    // *Returns:* { h, s, v } in [0,1]\n    function rgbToHsv(r, g, b) {\n\n        r = bound01(r, 255);\n        g = bound01(g, 255);\n        b = bound01(b, 255);\n\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\n        var h, s, v = max;\n\n        var d = max - min;\n        s = max === 0 ? 0 : d / max;\n\n        if(max == min) {\n            h = 0; // achromatic\n        }\n        else {\n            switch(max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n            h /= 6;\n        }\n        return { h: h, s: s, v: v };\n    }\n\n    // `hsvToRgb`\n    // Converts an HSV color value to RGB.\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n    // *Returns:* { r, g, b } in the set [0, 255]\n     function hsvToRgb(h, s, v) {\n\n        h = bound01(h, 360) * 6;\n        s = bound01(s, 100);\n        v = bound01(v, 100);\n\n        var i = math.floor(h),\n            f = h - i,\n            p = v * (1 - s),\n            q = v * (1 - f * s),\n            t = v * (1 - (1 - f) * s),\n            mod = i % 6,\n            r = [v, q, p, p, t, v][mod],\n            g = [t, v, v, q, p, p][mod],\n            b = [p, p, t, v, v, q][mod];\n\n        return { r: r * 255, g: g * 255, b: b * 255 };\n    }\n\n    // `rgbToHex`\n    // Converts an RGB color to hex\n    // Assumes r, g, and b are contained in the set [0, 255]\n    // Returns a 3 or 6 character hex\n    function rgbToHex(r, g, b, allow3Char) {\n\n        var hex = [\n            pad2(mathRound(r).toString(16)),\n            pad2(mathRound(g).toString(16)),\n            pad2(mathRound(b).toString(16))\n        ];\n\n        // Return a 3 character hex if possible\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n        }\n\n        return hex.join(\"\");\n    }\n        // `rgbaToHex`\n        // Converts an RGBA color plus alpha transparency to hex\n        // Assumes r, g, b and a are contained in the set [0, 255]\n        // Returns an 8 character hex\n        function rgbaToHex(r, g, b, a) {\n\n            var hex = [\n                pad2(convertDecimalToHex(a)),\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            return hex.join(\"\");\n        }\n\n    // `equals`\n    // Can be called with any tinycolor input\n    tinycolor.equals = function (color1, color2) {\n        if (!color1 || !color2) { return false; }\n        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n    };\n    tinycolor.random = function() {\n        return tinycolor.fromRatio({\n            r: mathRandom(),\n            g: mathRandom(),\n            b: mathRandom()\n        });\n    };\n\n\n    // Modification Functions\n    // ----------------------\n    // Thanks to less.js for some of the basics here\n    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n    function desaturate(color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return tinycolor(hsl);\n    }\n\n    function saturate(color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return tinycolor(hsl);\n    }\n\n    function greyscale(color) {\n        return tinycolor(color).desaturate(100);\n    }\n\n    function lighten (color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return tinycolor(hsl);\n    }\n\n    function brighten(color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var rgb = tinycolor(color).toRgb();\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n        return tinycolor(rgb);\n    }\n\n    function darken (color, amount) {\n        amount = (amount === 0) ? 0 : (amount || 10);\n        var hsl = tinycolor(color).toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return tinycolor(hsl);\n    }\n\n    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n    // Values outside of this range will be wrapped into this range.\n    function spin(color, amount) {\n        var hsl = tinycolor(color).toHsl();\n        var hue = (mathRound(hsl.h) + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return tinycolor(hsl);\n    }\n\n    // Combination Functions\n    // ---------------------\n    // Thanks to jQuery xColor for some of the ideas behind these\n    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n    function complement(color) {\n        var hsl = tinycolor(color).toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return tinycolor(hsl);\n    }\n\n    function triad(color) {\n        var hsl = tinycolor(color).toHsl();\n        var h = hsl.h;\n        return [\n            tinycolor(color),\n            tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n            tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n        ];\n    }\n\n    function tetrad(color) {\n        var hsl = tinycolor(color).toHsl();\n        var h = hsl.h;\n        return [\n            tinycolor(color),\n            tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n            tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n            tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n        ];\n    }\n\n    function splitcomplement(color) {\n        var hsl = tinycolor(color).toHsl();\n        var h = hsl.h;\n        return [\n            tinycolor(color),\n            tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n            tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n        ];\n    }\n\n    function analogous(color, results, slices) {\n        results = results || 6;\n        slices = slices || 30;\n\n        var hsl = tinycolor(color).toHsl();\n        var part = 360 / slices;\n        var ret = [tinycolor(color)];\n\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(tinycolor(hsl));\n        }\n        return ret;\n    }\n\n    function monochromatic(color, results) {\n        results = results || 6;\n        var hsv = tinycolor(color).toHsv();\n        var h = hsv.h, s = hsv.s, v = hsv.v;\n        var ret = [];\n        var modification = 1 / results;\n\n        while (results--) {\n            ret.push(tinycolor({ h: h, s: s, v: v}));\n            v = (v + modification) % 1;\n        }\n\n        return ret;\n    }\n\n    // Utility Functions\n    // ---------------------\n\n    tinycolor.mix = function(color1, color2, amount) {\n        amount = (amount === 0) ? 0 : (amount || 50);\n\n        var rgb1 = tinycolor(color1).toRgb();\n        var rgb2 = tinycolor(color2).toRgb();\n\n        var p = amount / 100;\n        var w = p * 2 - 1;\n        var a = rgb2.a - rgb1.a;\n\n        var w1;\n\n        if (w * a == -1) {\n            w1 = w;\n        } else {\n            w1 = (w + a) / (1 + w * a);\n        }\n\n        w1 = (w1 + 1) / 2;\n\n        var w2 = 1 - w1;\n\n        var rgba = {\n            r: rgb2.r * w1 + rgb1.r * w2,\n            g: rgb2.g * w1 + rgb1.g * w2,\n            b: rgb2.b * w1 + rgb1.b * w2,\n            a: rgb2.a * p  + rgb1.a * (1 - p)\n        };\n\n        return tinycolor(rgba);\n    };\n\n\n    // Readability Functions\n    // ---------------------\n    // <http://www.w3.org/TR/AERT#color-contrast>\n\n    // `readability`\n    // Analyze the 2 colors and returns an object with the following properties:\n    //    `brightness`: difference in brightness between the two colors\n    //    `color`: difference in color/hue between the two colors\n    tinycolor.readability = function(color1, color2) {\n        var c1 = tinycolor(color1);\n        var c2 = tinycolor(color2);\n        var rgb1 = c1.toRgb();\n        var rgb2 = c2.toRgb();\n        var brightnessA = c1.getBrightness();\n        var brightnessB = c2.getBrightness();\n        var colorDiff = (\n            Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\n            Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\n            Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\n        );\n\n        return {\n            brightness: Math.abs(brightnessA - brightnessB),\n            color: colorDiff\n        };\n    };\n\n    // `readable`\n    // http://www.w3.org/TR/AERT#color-contrast\n    // Ensure that foreground and background color combinations provide sufficient contrast.\n    // *Example*\n    //    tinycolor.isReadable(\"#000\", \"#111\") => false\n    tinycolor.isReadable = function(color1, color2) {\n        var readability = tinycolor.readability(color1, color2);\n        return readability.brightness > 125 && readability.color > 500;\n    };\n\n    // `mostReadable`\n    // Given a base color and a list of possible foreground or background\n    // colors for that base, returns the most readable color.\n    // *Example*\n    //    tinycolor.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\n    tinycolor.mostReadable = function(baseColor, colorList) {\n        var bestColor = null;\n        var bestScore = 0;\n        var bestIsReadable = false;\n        for (var i=0; i < colorList.length; i++) {\n\n            // We normalize both around the \"acceptable\" breaking point,\n            // but rank brightness constrast higher than hue.\n\n            var readability = tinycolor.readability(baseColor, colorList[i]);\n            var readable = readability.brightness > 125 && readability.color > 500;\n            var score = 3 * (readability.brightness / 125) + (readability.color / 500);\n\n            if ((readable && ! bestIsReadable) ||\n                (readable && bestIsReadable && score > bestScore) ||\n                ((! readable) && (! bestIsReadable) && score > bestScore)) {\n                bestIsReadable = readable;\n                bestScore = score;\n                bestColor = tinycolor(colorList[i]);\n            }\n        }\n        return bestColor;\n    };\n\n\n    // Big List of Colors\n    // ------------------\n    // <http://www.w3.org/TR/css3-color/#svg-color>\n    var names = tinycolor.names = {\n        aliceblue: \"f0f8ff\",\n        antiquewhite: \"faebd7\",\n        aqua: \"0ff\",\n        aquamarine: \"7fffd4\",\n        azure: \"f0ffff\",\n        beige: \"f5f5dc\",\n        bisque: \"ffe4c4\",\n        black: \"000\",\n        blanchedalmond: \"ffebcd\",\n        blue: \"00f\",\n        blueviolet: \"8a2be2\",\n        brown: \"a52a2a\",\n        burlywood: \"deb887\",\n        burntsienna: \"ea7e5d\",\n        cadetblue: \"5f9ea0\",\n        chartreuse: \"7fff00\",\n        chocolate: \"d2691e\",\n        coral: \"ff7f50\",\n        cornflowerblue: \"6495ed\",\n        cornsilk: \"fff8dc\",\n        crimson: \"dc143c\",\n        cyan: \"0ff\",\n        darkblue: \"00008b\",\n        darkcyan: \"008b8b\",\n        darkgoldenrod: \"b8860b\",\n        darkgray: \"a9a9a9\",\n        darkgreen: \"006400\",\n        darkgrey: \"a9a9a9\",\n        darkkhaki: \"bdb76b\",\n        darkmagenta: \"8b008b\",\n        darkolivegreen: \"556b2f\",\n        darkorange: \"ff8c00\",\n        darkorchid: \"9932cc\",\n        darkred: \"8b0000\",\n        darksalmon: \"e9967a\",\n        darkseagreen: \"8fbc8f\",\n        darkslateblue: \"483d8b\",\n        darkslategray: \"2f4f4f\",\n        darkslategrey: \"2f4f4f\",\n        darkturquoise: \"00ced1\",\n        darkviolet: \"9400d3\",\n        deeppink: \"ff1493\",\n        deepskyblue: \"00bfff\",\n        dimgray: \"696969\",\n        dimgrey: \"696969\",\n        dodgerblue: \"1e90ff\",\n        firebrick: \"b22222\",\n        floralwhite: \"fffaf0\",\n        forestgreen: \"228b22\",\n        fuchsia: \"f0f\",\n        gainsboro: \"dcdcdc\",\n        ghostwhite: \"f8f8ff\",\n        gold: \"ffd700\",\n        goldenrod: \"daa520\",\n        gray: \"808080\",\n        green: \"008000\",\n        greenyellow: \"adff2f\",\n        grey: \"808080\",\n        honeydew: \"f0fff0\",\n        hotpink: \"ff69b4\",\n        indianred: \"cd5c5c\",\n        indigo: \"4b0082\",\n        ivory: \"fffff0\",\n        khaki: \"f0e68c\",\n        lavender: \"e6e6fa\",\n        lavenderblush: \"fff0f5\",\n        lawngreen: \"7cfc00\",\n        lemonchiffon: \"fffacd\",\n        lightblue: \"add8e6\",\n        lightcoral: \"f08080\",\n        lightcyan: \"e0ffff\",\n        lightgoldenrodyellow: \"fafad2\",\n        lightgray: \"d3d3d3\",\n        lightgreen: \"90ee90\",\n        lightgrey: \"d3d3d3\",\n        lightpink: \"ffb6c1\",\n        lightsalmon: \"ffa07a\",\n        lightseagreen: \"20b2aa\",\n        lightskyblue: \"87cefa\",\n        lightslategray: \"789\",\n        lightslategrey: \"789\",\n        lightsteelblue: \"b0c4de\",\n        lightyellow: \"ffffe0\",\n        lime: \"0f0\",\n        limegreen: \"32cd32\",\n        linen: \"faf0e6\",\n        magenta: \"f0f\",\n        maroon: \"800000\",\n        mediumaquamarine: \"66cdaa\",\n        mediumblue: \"0000cd\",\n        mediumorchid: \"ba55d3\",\n        mediumpurple: \"9370db\",\n        mediumseagreen: \"3cb371\",\n        mediumslateblue: \"7b68ee\",\n        mediumspringgreen: \"00fa9a\",\n        mediumturquoise: \"48d1cc\",\n        mediumvioletred: \"c71585\",\n        midnightblue: \"191970\",\n        mintcream: \"f5fffa\",\n        mistyrose: \"ffe4e1\",\n        moccasin: \"ffe4b5\",\n        navajowhite: \"ffdead\",\n        navy: \"000080\",\n        oldlace: \"fdf5e6\",\n        olive: \"808000\",\n        olivedrab: \"6b8e23\",\n        orange: \"ffa500\",\n        orangered: \"ff4500\",\n        orchid: \"da70d6\",\n        palegoldenrod: \"eee8aa\",\n        palegreen: \"98fb98\",\n        paleturquoise: \"afeeee\",\n        palevioletred: \"db7093\",\n        papayawhip: \"ffefd5\",\n        peachpuff: \"ffdab9\",\n        peru: \"cd853f\",\n        pink: \"ffc0cb\",\n        plum: \"dda0dd\",\n        powderblue: \"b0e0e6\",\n        purple: \"800080\",\n        rebeccapurple: \"663399\",\n        red: \"f00\",\n        rosybrown: \"bc8f8f\",\n        royalblue: \"4169e1\",\n        saddlebrown: \"8b4513\",\n        salmon: \"fa8072\",\n        sandybrown: \"f4a460\",\n        seagreen: \"2e8b57\",\n        seashell: \"fff5ee\",\n        sienna: \"a0522d\",\n        silver: \"c0c0c0\",\n        skyblue: \"87ceeb\",\n        slateblue: \"6a5acd\",\n        slategray: \"708090\",\n        slategrey: \"708090\",\n        snow: \"fffafa\",\n        springgreen: \"00ff7f\",\n        steelblue: \"4682b4\",\n        tan: \"d2b48c\",\n        teal: \"008080\",\n        thistle: \"d8bfd8\",\n        tomato: \"ff6347\",\n        turquoise: \"40e0d0\",\n        violet: \"ee82ee\",\n        wheat: \"f5deb3\",\n        white: \"fff\",\n        whitesmoke: \"f5f5f5\",\n        yellow: \"ff0\",\n        yellowgreen: \"9acd32\"\n    };\n\n    // Make it easy to access colors via `hexNames[hex]`\n    var hexNames = tinycolor.hexNames = flip(names);\n\n\n    // Utilities\n    // ---------\n\n    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n    function flip(o) {\n        var flipped = { };\n        for (var i in o) {\n            if (o.hasOwnProperty(i)) {\n                flipped[o[i]] = i;\n            }\n        }\n        return flipped;\n    }\n\n    // Return a valid alpha value [0,1] with all invalid values being set to 1\n    function boundAlpha(a) {\n        a = parseFloat(a);\n\n        if (isNaN(a) || a < 0 || a > 1) {\n            a = 1;\n        }\n\n        return a;\n    }\n\n    // Take input from [0, n] and return it as [0, 1]\n    function bound01(n, max) {\n        if (isOnePointZero(n)) { n = \"100%\"; }\n\n        var processPercent = isPercentage(n);\n        n = mathMin(max, mathMax(0, parseFloat(n)));\n\n        // Automatically convert percentage into number\n        if (processPercent) {\n            n = parseInt(n * max, 10) / 100;\n        }\n\n        // Handle floating point rounding errors\n        if ((math.abs(n - max) < 0.000001)) {\n            return 1;\n        }\n\n        // Convert into [0, 1] range if it isn't already\n        return (n % max) / parseFloat(max);\n    }\n\n    // Force a number between 0 and 1\n    function clamp01(val) {\n        return mathMin(1, mathMax(0, val));\n    }\n\n    // Parse a base-16 hex value into a base-10 integer\n    function parseIntFromHex(val) {\n        return parseInt(val, 16);\n    }\n\n    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n    function isOnePointZero(n) {\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n    }\n\n    // Check to see if string passed in is a percentage\n    function isPercentage(n) {\n        return typeof n === \"string\" && n.indexOf('%') != -1;\n    }\n\n    // Force a hex value to have 2 characters\n    function pad2(c) {\n        return c.length == 1 ? '0' + c : '' + c;\n    }\n\n    // Replace a decimal with it's percentage value\n    function convertToPercentage(n) {\n        if (n <= 1) {\n            n = (n * 100) + \"%\";\n        }\n\n        return n;\n    }\n\n    // Converts a decimal to a hex value\n    function convertDecimalToHex(d) {\n        return Math.round(parseFloat(d) * 255).toString(16);\n    }\n    // Converts a hex value to a decimal\n    function convertHexToDecimal(h) {\n        return (parseIntFromHex(h) / 255);\n    }\n\n    var matchers = (function() {\n\n        // <http://www.w3.org/TR/css3-values/#integers>\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n        // <http://www.w3.org/TR/css3-values/#number-value>\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n        // Actual matching.\n        // Parentheses and commas are optional, but not required.\n        // Whitespace can take the place of commas or opening paren\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n        return {\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n        };\n    })();\n\n    // `stringInputToObject`\n    // Permissive string parsing.  Take in a number of formats, and output an object\n    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n    function stringInputToObject(color) {\n\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n        var named = false;\n        if (names[color]) {\n            color = names[color];\n            named = true;\n        }\n        else if (color == 'transparent') {\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n        }\n\n        // Try to match string input using regular expressions.\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n        // Just return an object and let the conversion functions handle that.\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\n        var match;\n        if ((match = matchers.rgb.exec(color))) {\n            return { r: match[1], g: match[2], b: match[3] };\n        }\n        if ((match = matchers.rgba.exec(color))) {\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\n        }\n        if ((match = matchers.hsl.exec(color))) {\n            return { h: match[1], s: match[2], l: match[3] };\n        }\n        if ((match = matchers.hsla.exec(color))) {\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\n        }\n        if ((match = matchers.hsv.exec(color))) {\n            return { h: match[1], s: match[2], v: match[3] };\n        }\n        if ((match = matchers.hsva.exec(color))) {\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\n        }\n        if ((match = matchers.hex8.exec(color))) {\n            return {\n                a: convertHexToDecimal(match[1]),\n                r: parseIntFromHex(match[2]),\n                g: parseIntFromHex(match[3]),\n                b: parseIntFromHex(match[4]),\n                format: named ? \"name\" : \"hex8\"\n            };\n        }\n        if ((match = matchers.hex6.exec(color))) {\n            return {\n                r: parseIntFromHex(match[1]),\n                g: parseIntFromHex(match[2]),\n                b: parseIntFromHex(match[3]),\n                format: named ? \"name\" : \"hex\"\n            };\n        }\n        if ((match = matchers.hex3.exec(color))) {\n            return {\n                r: parseIntFromHex(match[1] + '' + match[1]),\n                g: parseIntFromHex(match[2] + '' + match[2]),\n                b: parseIntFromHex(match[3] + '' + match[3]),\n                format: named ? \"name\" : \"hex\"\n            };\n        }\n\n        return false;\n    }\n\n    window.tinycolor = tinycolor;\n    })();\n\n    $(function () {\n        if ($.fn.spectrum.load) {\n            $.fn.spectrum.processNativeColorInputs();\n        }\n    });\n\n});\n"],"file":"color-picker.min.js"}