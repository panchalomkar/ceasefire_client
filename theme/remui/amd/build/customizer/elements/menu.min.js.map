{"version":3,"sources":["customizer/elements/menu.js"],"names":["define","$","Notification","Templates","ModalFactory","ModalEvents","SELECTOR","ADDMENUITEM","EDITMENUITEM","MOVEUPMENUITEM","MOVEDOWNMENUITEM","DELETEMENUITEM","FORM","TEXT","ADDRESS","MENULIST","MENUITEM","MENURESET","DIRECTION","UP","DOWN","generateMenuData","root","elements","find","menu","each","index","element","push","text","data","address","val","JSON","stringify","trigger","addEditMenuItem","item","menuitem","undefined","create","title","M","util","get_string","body","render","type","types","SAVE_CANCEL","done","modal","show","getRoot","on","save","event","preventDefault","html","js","appendNodeContents","replaceNode","hide","hidden","destroy","moveMenuItem","direction","prev","length","insertAfter","next","insertBefore","init","this","closest","remove","value","regenerateMenu","parse","exception","shift"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Theme customizer menu js\n *\n * @package   theme_remui/customizer/elements\n * @copyright (c) 2021 WisdmLabs (https://wisdmlabs.com/) <support@wisdmlabs.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author    Yogesh Shirsath\n */\n\ndefine('theme_remui/customizer/elements/menu', [\n    'jquery',\n    'core/notification',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/modal_save_cancel'\n], function($, Notification, Templates, ModalFactory, ModalEvents) {\n\n    /**\n     * Selectors.\n     */\n    let SELECTOR = {\n        ADDMENUITEM: '.add-menu-item',\n        EDITMENUITEM: '.action-edit',\n        MOVEUPMENUITEM: '.action-move-up',\n        MOVEDOWNMENUITEM: '.action-move-down',\n        DELETEMENUITEM: '.action-delete',\n        FORM: '.customizer-menu-item-form',\n        TEXT: '.menu-text',\n        ADDRESS: '.menu-address',\n        MENULIST: '.customizer-menu-item-list',\n        MENUITEM: '.menu-item',\n        MENURESET: '.menu-reset'\n    };\n\n    /**\n     * Menu item move direction.\n     */\n    let DIRECTION = {\n        UP: -1,\n        DOWN: 1\n    };\n\n    /**\n     * Generate json data of menu.\n     * @param {String} root Menu root setting element\n     */\n    function generateMenuData(root) {\n        let elements = $(root).find(SELECTOR.MENULIST).find(SELECTOR.MENUITEM);\n        let menu = [];\n        $.each(elements, function(index, element) {\n            menu.push({\n                'text': $(element).data('text'),\n                'address': $(element).data('address')\n            });\n        });\n        $(root).find('textarea').val(JSON.stringify(menu)).trigger('change');\n    }\n\n    /**\n     * Regenerate menu.\n     * @param {String} root Menu root setting element\n     * @param {String} menu Menu items list\n     */\n    function regenerateMenu(root, menu) {\n        if (menu == undefined) {\n            $(root).find(SELECTOR.MENULIST).html('').hide();\n            menu = $(root).find('textarea').val();\n            try {\n                menu = JSON.parse(menu);\n            } catch (exception) {\n                menu = [];\n            }\n        }\n        if (menu.length == 0) {\n            $(root).find(SELECTOR.MENULIST).show();\n            return;\n        }\n        Templates.render('theme_remui/customizer/elements/menu/menu-item', menu.shift())\n        .done(function(html, js) {\n            Templates.appendNodeContents($(root).find(SELECTOR.MENULIST), html, js);\n            regenerateMenu(root, menu);\n        });\n    }\n\n    /**\n     * Add menu item\n     * @param {String} root Menu root setting element\n     * @param {DOM} item Pass menu item if editing existing menu\n     */\n    function addEditMenuItem(root, item) {\n        let menuitem = {};\n        if (item != undefined) {\n            menuitem = {\n                'text': $(item).data('text'),\n                'address': $(item).data('address')\n            };\n        }\n        ModalFactory.create({\n            title: M.util.get_string('customizermenuadd', 'theme_remui'),\n            body: Templates.render('theme_remui/customizer/elements/menu/menu-add-edit', menuitem),\n            type: ModalFactory.types.SAVE_CANCEL\n        }, $('#create'))\n        .done(function(modal) {\n            modal.show();\n            modal.getRoot().on(ModalEvents.save, function(event) {\n                event.preventDefault();\n                let text = $(SELECTOR.FORM).find(SELECTOR.TEXT).val();\n                let address = $(SELECTOR.FORM).find(SELECTOR.ADDRESS).val();\n                menuitem = {\n                    'text': text,\n                    'address': address\n                };\n                Templates.render('theme_remui/customizer/elements/menu/menu-item', menuitem)\n                .done(function(html, js) {\n                    if (item == undefined) {\n                        Templates.appendNodeContents($(root).find(SELECTOR.MENULIST), html, js);\n                    } else {\n                        Templates.replaceNode($(item), html, js);\n                    }\n                    generateMenuData(root);\n                });\n                modal.hide();\n            });\n\n            // Destroy modal on hidden.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.destroy();\n            });\n        });\n    }\n\n    /**\n     * Move menu item up or down\n     * @param {DOM}     root      Menu root setting element\n     * @param {DOM}     item      Menu item\n     * @param {Integer} direction Direction to move item\n     */\n    function moveMenuItem(root, item, direction) {\n        switch (direction) {\n            case DIRECTION.UP:\n                if ($(item).prev().length == 0) {\n                    return;\n                }\n                $(item).prev().insertAfter(item);\n                break;\n            case DIRECTION.DOWN:\n                if ($(item).next().length == 0) {\n                    return;\n                }\n                $(item).next().insertBefore(item);\n                break;\n        }\n        generateMenuData(root);\n    }\n\n    /**\n     * Initialize menu element\n     * @param {String} root Menu root setting element\n     */\n    function init(root) {\n        // Add menu item.\n        $('body').on('click', root + ' ' + SELECTOR.ADDMENUITEM, function() {\n            addEditMenuItem(root);\n        });\n\n        // Edit menu item.\n        $('body').on('click', root + ' ' + SELECTOR.EDITMENUITEM, function() {\n            addEditMenuItem(root, $(this).closest(SELECTOR.MENUITEM));\n        });\n\n        // Move up menu item.\n        $('body').on('click', root + ' ' + SELECTOR.MOVEUPMENUITEM, function() {\n            moveMenuItem(root, $(this).closest(SELECTOR.MENUITEM), DIRECTION.UP);\n        });\n\n        // Move down menu item.\n        $('body').on('click', root + ' ' + SELECTOR.MOVEDOWNMENUITEM, function() {\n            moveMenuItem(root, $(this).closest(SELECTOR.MENUITEM), DIRECTION.DOWN);\n        });\n\n        // Delete menu item.\n        $('body').on('click', root + ' ' + SELECTOR.DELETEMENUITEM, function() {\n            $(this).closest(SELECTOR.MENUITEM).remove();\n            generateMenuData(root);\n        });\n\n        $('body').on('click', root + ' ' + SELECTOR.MENURESET, function() {\n            let value = $(this).data('default');\n            $(this).next().find('textarea').val(JSON.stringify(value)).trigger('input').trigger('change');\n            regenerateMenu(root);\n        });\n    }\n\n    return {\n        init: init\n    };\n});\n"],"file":"menu.min.js"}